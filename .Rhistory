install.packages("devtools")
library(devtools)
library(devtools)
find_rtools()
setwd("E:/R")
source('E:/R/rprog-scripts-submitscript1.R')
source('E:/R/corr.R')
submit()
?pnorm
dnorm(70,mean = 80,sd=10)
qnorm(70,mean = 80,sd=10)
pnorm(70,mean = 80,sd=10)
qnorm(95,mean = 1100,sd=75)
qnorm(0.95,mean = 1100,sd=75)
qnorm(0.95,mean = 1100,sd=75/10)
choose(5,4)*0.5^5+0.5^5
pnorm(14,mean=15,sd=1)
pnorm(14,mean=15,sd=1) * 2
1 - pnorm(14,mean=15,sd=1) * 2
ppois(10, lambda = 15)
?t.test
?pbinom
pbinom(9, 1787, prob = 0.01)
pbinom(1, 100, prob = 0.01)
pbinom(1, 1, prob = 0.01)
pbinom(1, 2, prob = 0.5)
pbinom(2, 2, prob = 0.5)
qbinom(2, 2, prob = 0.5)
pbinom(1, 1, prob = 0.5)
pbinom(0, 1, prob = 0.5)
pbinom(10, 1787, prob = 0.01)
?t.test
qt((-3-1)/(1.8/3), 8)
?qt
qt((-3-1)/(1.8/3), 8, 9)
t <- (-3 - 1)/sqrt(1.8^2/9 + 1.5^2/9)
qt(t, 8)
qt(-t, 8)
df <- (1.8^2/9 + 1.5^2/9)^2 / ((1.8^2/9)^2/(9-1) + (1.5^2/9)^2/(9-1))
qt(t, df)
pt(t, df)
pbinom(2,4,prob=0.5)
(-3 - 1)/(1.8/3)
qt((-3 - 1)/(1.8/3),8)
pt((-3 - 1)/(1.8/3),8)
?var.test
qt(0.975,df)
qt(0.025,df)
qt(0.05,df)
qt(0.95,df)
qt(0.995,df)
qt(0.005,df)
pt(0.01/(0.04/10), 99)
alpha = 0.05
z <- qnorm(1-alpha)
pnorm(0 + z * 0.04/sqrt(100), mean = 0.01, sd = 0.04/sqrt(100), lower.tail = FALSE)
qnorm(1-alpha)
qnorm(1-alpha*2)
qnorm(0.05)
qnorm(0.05) - (-3-1)
qnorm(0.975)
0.01 / qnorm(0.975)
4 * qnorm(0.975)
(4 * qnorm(0.975))^2
mu0 <- 0
mua <- 0.01
sd <- 0.04
?pnorm
pnorm(0.975, lower.tail = FALSE)
qnorm(0.975, lower.tail = FALSE)
qnorm(0.95, mean = 0, sd = 0.04, lower.tail = FALSE)
qnorm(0.95, mean = 0, sd = 0.04, lower.tail = FALSE) / 0.01
qnorm(0.95, mean = 0, sd = 0.04, lower.tail = FALSE) / 0.01 * 0.04
qnorm(1,lower.tail=FALSE)
qnorm(1)
qnorm(0.025)
qnorm(0.95,mean=0,sd=0.04)
z <- qnorm(0.95,mean=0,sd=0.04)
z/0.01*0.04
?pt
?qnorm
qnorm(0.95)
qnorm(0.95) / 0.01 * 0.04
6.58^2
?pt
pt(0.95)
pnorm(0.95)
qnorm(0.95)
?makedir
?create
setwd("RepData_PeerAssessment1")
setwd("E:/liquer@github/RepData_PeerAssessment1")
?read.csv
data <- read.csv("activity.csv")
head(data)
tail(data)
data[9]
data[9,]
data[24*60/5,]
data[24*60/5+1,]
data <- read.csv("activity.csv", colClasses = c("integer", "Date", "integer"))
data$date <- as.Date(data$date)
data <- read.csv("activity.csv", colClasses = c("integer", "character", "integer"))
data$date <- as.Date(data$date)
head(data$date)
data$date <- strptime(data$date, "%Y-%m-%d")
head(data$date)
?Date
data$date <- as.Date(data$date)
24*60/5
17568/288
?vector
aaa <- vector(mode = "integer", length = 61)
?hist
totalSteps <- vector(mode = "integer", length = 17568/(24*60/5))
for(i in 1:length(totalSteps)){
for(j in 1:(24*60/5)){
totalSteps[[i]] <- totalSteps[[i]] + data[[(i-1)*(24*60/5)+j]]
}
}
hist(totalSteps)
totalSteps <- vector(mode = "integer", length = 17568/(24*60/5))
for(i in 1:length(totalSteps)){
for(j in 1:(24*60/5)){
totalSteps[i] <- totalSteps[i] + data[(i-1)*(24*60/5)+j]
}
}
hist(totalSteps)
?sum
totalSteps <- vector(mode = "numeric", length = 17568/(24*60/5))
for(i in 1:length(totalSteps)){
totalSteps[i] <- sum(data$steps[c(i-1,i)*(24*60/5)], na.rm = TRUE)
}
hist(totalSteps)
data2 <- cbind(data$date, totalSteps)
View(data2)
View(data2)
hist(data2)
View(data)
View(data)
View(data2)
totalSteps <- vector(mode = "numeric", length = 17568/(24*60/5))
for(i in 1:length(totalSteps)){
totalSteps[i] <- sum(data$steps[(i-1:i)*(24*60/5)], na.rm = TRUE)
}
hist(totalSteps)
View(data2)
?hist
hist(totalSteps,break=61)
hist(totalSteps,breaks=61)
hist(totalSteps,breaks=61,xlim=70)
totalSteps
for(i in 1:length(totalSteps)){
totalSteps[i] <- sum(data$steps[((i-1)*24*60/5+1):(i*24*60/5)], na.rm = TRUE)
}
hist(totalSteps,breaks=61)
hist(x=data$date,freq=totalSteps,breaks=61)
hist(x=1:61,freq=totalSteps,breaks=61)
hist(totalSteps,breaks=61)
hist(totalSteps)
levels(totalSteps)
totalSteps <- vector(mode = "integer", length = 17568/(24*60/5))
for(i in 1:length(totalSteps)){
totalSteps[i] <- sum(data$steps[((i-1)*24*60/5+1):(i*24*60/5)], na.rm = TRUE)
}
hist(totalSteps)
totalSteps <- vector(mode = "integer", length = 17568/(24*60/5))
for(i in 1:length(totalSteps)){
totalSteps[i] <- sum(data$steps[((i-1)*24*60/5+1):(i*24*60/5)], na.rm = TRUE)
}
hist(totalSteps, main = "Total Number of Steps Taken Each Day", xlab="Steps")
totalSteps <- vector(mode = "integer", length = 17568/(24*60/5))
for(i in 1:length(totalSteps)){
totalSteps[i] <- sum(data$steps[((i-1)*24*60/5+1):(i*24*60/5)], na.rm = TRUE)
}
hist(totalSteps, main = "Total Number of Steps Taken Each Day", xlab="Steps", col = "green")
totalSteps <- vector(mode = "integer", length = 17568/(24*60/5))
for(i in 1:length(totalSteps)){
totalSteps[i] <- sum(data$steps[((i-1)*24*60/5+1):(i*24*60/5)], na.rm = TRUE)
}
hist(totalSteps, main = "Total Number of Steps Taken Each Day", xlab="Steps", col = 498)
summary(totalSteps)
hist(totalSteps, main = "Total Number of Steps Taken Each Day", xlab="Steps", col = 498,width = 480, height = 480)
?subset
avgDaily <- data.frame(data$interval[1:(24*60/5)], vector(mode = "numeric", length= 24*60/5))
names(avgDaily) <- c("interval", "steps")
data2 <- subset(data, interval == 0, select = -date)
data2 <- subset(data, interval == 0, select = -date-interval)
data2 <- subset(data, interval == 0, select = steps)
for(i in 1:(24*60/5)){
avgDaily$steps[i] <- sum(subset(data, interval == (i-1)*5, select = steps) ,na.rm = TRUE)
}
for(i in 1:(24*60/5)){
avgDaily$steps[i] <- sum(subset(data, interval = (i-1)*5, select = steps) ,na.rm = TRUE)
}
for(i in 1:(24*60/5)){
data2 <- subset(data, interval = (i-1)*5, select = steps)
avgDaily$steps[i] <- sum(data2$steps ,na.rm = TRUE)
}
for(i in 1:(24*60/5)){
data2 <- subset(data, interval == (i-1)*5, select = steps)
avgDaily$steps[i] <- sum(data2$steps ,na.rm = TRUE)
}
for(i in 1:(24*60/5)){
data2 <- subset(data, interval == (i-1)*5, select = steps)
avgDaily$steps[i] <- mean(data2$steps ,na.rm = TRUE)
}
?plot
with(avgDaily, plot(interval ~ steps, main = "Average Daily Activity Pattern", type = "l"))
with(avgDaily, plot(steps ~ interval, main = "Average Daily Activity Pattern", type = "l"))
with(avgDaily, plot(steps ~ interval, main = "Average Daily Activity Pattern", type = "l", lwd = 10))
with(avgDaily, plot(steps ~ interval, main = "Average Daily Activity Pattern", type = "l", lwd = 3))
with(avgDaily, plot(steps ~ interval, main = "Average Daily Activity Pattern", type = "l", lwd = 2))
with(avgDaily, plot(steps ~ interval, main = "Average Daily Activity Pattern", type = "l", lwd = 1))
with(avgDaily, plot(steps ~ interval, main = "Average Daily Activity Pattern", type = "l"))
max(avgDaily$steps)
?max
View(avgDaily)
data2 <- subset(data, interval == 99*5, select = steps)
View(data)
?%
2%3
2/3
as.integer(2/3)
for(i in 1:(24*60/5)){
data2 <- subset(data, interval == data$interval[i], select = steps)
avgDaily$steps[i] <- mean(data2$steps ,na.rm = TRUE)
}
with(avgDaily, plot(steps ~ interval, type = "l", main = "Average Daily Activity Pattern", xlab = "Interval", ylab = "Average Steps"))
max(avgDaily$steps)
?max
?subset
subset(avgDaily, steps = max(avgDaily$steps))
subset(avgDaily, steps == max(avgDaily$steps))
sum(is.na(data$steps))
for(i in 1:length(data$steps)){
if(is.na(data$steps[i])){
data2 <- subset(avgDaily, interval == data$interval[i], select = steps)
data$steps[i] <- data2$steps[1]
}
}
newdata <- data
totalSteps2 <- vector(mode = "integer", length = 17568/(24*60/5))
for(i in 1:length(totalSteps2)){
totalSteps2[i] <- sum(newdata$steps[((i-1)*24*60/5+1):(i*24*60/5)], na.rm = TRUE)
}
hist(totalSteps2, main = "Total Number of Steps Taken Each Day II", xlab="Steps", col = 498)
summary(totalSteps2)
?copy
?levels
weekdata <- cbind(newdata, weekdays(newdata$date))
weekdata <- cbind(newdata, "weekdays" = weekdays(newdata$date))
levels(weekdata$weekdays)
levels(weekdata$weekdays) <- c("weekday", "weekend", "weekend", "weekday", "weekday", "weekday", "weekday")
weekdays(newdata$date)
w <- weekdays(newdata$date)
view(weekdata$weekdays)
View(avgDaily)
View(weekdata)
weekdata[9993,]
weekdata[9785,]
weekdata[9385,]
weekdata <- cbind(newdata, "weekdays" = weekdays(newdata$date))
levels[weekdata$weekdays][1]
levels(weekdata$weekdays)[1]
levels(weekdata$weekdays)[2]
levels(weekdata$weekdays)[3]
?subset
?data.frame
?lapply
lapply(weekdata,mean)
subset(weekdata, levels(weekdata$weekdays) == "weekday")
subset(weekdata, level == "weekday")
subset(weekdata, levels == "weekday")
levels(weekdata$weekdays) == "weekday"
levels(weekdata$weekdays) <- c("weekday", "weekend", "weekend", "weekday", "weekday", "weekday", "weekday")
levels(weekdata$weekdays) == "weekday"
subset(weekdata, levels(weekdata$weekdays) == "weekday")
avgWeekdays <- data.frame(vector(mode = "character", length= 24*60/5*2), data$interval[1:(24*60/5*2)], vector(mode = "numeric", length= 24*60/5*2))
avgWeekday <- data.frame("weekdays" = vector(mode = "character", length = 24*60/5), "interval" = data$interval[1:(24*60/5)], "steps" = vector(mode = "numeric", length = 24*60/5))
avgWeekdays <- data.frame("weekdays" = vector(mode = "character", length = 24*60/5*2), "interval" = data$interval[1:(24*60/5*2)], "steps" = vector(mode = "numeric", length = 24*60/5))
for(i in 1:(24*60/5)){
avgWeekdays$weekdays[i] <- "weekday"
data2 <- subset(weekdata, weekdays == "weekday" & interval == avgWeekdays$interval[i],select = steps)
avgWeekdays$steps[i] <- mean(data2$steps ,na.rm = TRUE)
}
for(i in 1:(24*60/5)){
avgWeekdays$weekdays[i+24*60/5] <- "weekend"
data2 <- subset(weekdata, weekdays == "weekend" & interval == avgWeekdays$interval[i+24*60/5],select = steps)
avgWeekdays$steps[i+24*60/5] <- mean(data2$steps ,na.rm = TRUE)
}
warinings
warinings()
warnings()
for(i in 1:(24*60/5)){
avgWeekdays$weekdays[i] <- 1
data2 <- subset(weekdata, weekdays == "weekday" & interval == avgWeekdays$interval[i],select = steps)
avgWeekdays$steps[i] <- mean(data2$steps ,na.rm = TRUE)
}
for(i in 1:(24*60/5)){
avgWeekdays$weekdays[i+24*60/5] <- 2
data2 <- subset(weekdata, weekdays == "weekend" & interval == avgWeekdays$interval[i+24*60/5],select = steps)
avgWeekdays$steps[i+24*60/5] <- mean(data2$steps ,na.rm = TRUE)
}
levels(avgWeekdays$weekdays) <- c("weekday", "weekend")
avgWeekdays <- data.frame("weekdays" = weekdata$weekdays[1:(24*60/5*2)], "interval" = data$interval[1:(24*60/5*2)], "steps" = vector(mode = "numeric", length = 24*60/5))
for(i in 1:(24*60/5)){
avgWeekdays$weekdays[i] <- "weekday"
data2 <- subset(weekdata, weekdays == "weekday" & interval == avgWeekdays$interval[i],select = steps)
avgWeekdays$steps[i] <- mean(data2$steps ,na.rm = TRUE)
}
for(i in 1:(24*60/5)){
avgWeekdays$weekdays[i+24*60/5] <- "weekend"
data2 <- subset(weekdata, weekdays == "weekend" & interval == avgWeekdays$interval[i+24*60/5],select = steps)
avgWeekdays$steps[i+24*60/5] <- mean(data2$steps ,na.rm = TRUE)
}
levels(avgWeekdays$weekdays) <- c("weekday", "weekend")
View(avgWeekdays)
avgWeekdays <- transform(avgWeekdays, weekdays)
library(lattice)
xyplot(steps ~ interval|weekdays, data = avgWeekdays, layout = c(1, 2))
?xyplot
stripplot(steps ~ interval|weekdays, data = avgWeekdays, layout = c(1, 2))
dotplot(steps ~ interval|weekdays, data = avgWeekdays, layout = c(1, 2))
vwplot(steps ~ interval|weekdays, data = avgWeekdays, layout = c(1, 2))
bwplot(steps ~ interval|weekdays, data = avgWeekdays, layout = c(1, 2))
splom(steps ~ interval|weekdays, data = avgWeekdays, layout = c(1, 2))
xyplot(steps ~ interval|weekdays, data = avgWeekdays, layout = c(1, 2), type = "l")
?lattice
data <- read.csv("activity.csv")
avgDaily <- data.frame(data$interval[1:(24*60/5)], vector(mode = "numeric", length= 24*60/5))
names(avgDaily) <- c("interval", "steps")
for(i in 1:(24*60/5)){
data2 <- subset(data, interval == data$interval[i], select = steps)
avgDaily$steps[i] <- mean(data2$steps ,na.rm = TRUE)
}
with(avgDaily, plot(steps ~ interval, type = "l", main = "Average Daily Activity Pattern", xlab = "Interval", ylab = "Average Steps"))
newdata <- data
for(i in 1:length(newdata$steps)){
if(is.na(newdata$steps[i])){
data2 <- subset(avgDaily, interval == newdata$interval[i], select = steps)
newdata$steps[i] <- data2$steps[1]
}
}
totalSteps2 <- vector(mode = "integer", length = 17568/(24*60/5))
for(i in 1:length(totalSteps2)){
totalSteps2[i] <- sum(newdata$steps[((i-1)*24*60/5+1):(i*24*60/5)], na.rm = TRUE)
}
hist(totalSteps2, main = "Total Number of Steps Taken Each Day II", xlab="Steps", col = 498)
library(lattice)
weekdata <- cbind(newdata, "weekdays" = weekdays(as.character(newdata$date))
)
?apply
ww <- apply(newdata$date, weekdays)
ww <- lapply(newdata$date, weekdays)
?lapply
ww <- vapply(newdata$date, weekdays)
ww <- vapply(newdata$date, FUN = weekdays)
ww <- Lapply(newdata$date, FUN = weekdays)
ww <- lapply(newdata$date, weekdays)
?weekdays
weekdata <- cbind(newdata, "weekdays" = weekdays(as.Date(newdata$date)))
